sudo: true

language: go

go:
  - "1.12.x"

service:
  - docker

env:
  - GO111MODULE=on

install: true

jobs:
  include:
    - stage: check the go code
      before_install:
      - sudo apt-get update
      - sudo apt-get install -y libpcap-dev
      script:
      - cd grpc/go/kubedge_server/
      - CGO_ENABLED=0 GOOS=linux GOARM=7 GOARCH=arm go build -a -installsuffix cgo -o goclient .
      - CGO_ENABLED=0 GOOS=linux GOARM=7 GOARCH=arm go build -a -installsuffix cgo -o goserv .
      - cd ../../../grpc/go/kubedge_client/
      - CGO_ENABLED=0 GOOS=linux GOARM=7 GOARCH=arm go build -a -installsuffix cgo -o goclient .
#     JEB: Still can't figure out how to cross compile
#      - cd ../../../arpscan/
#      - CGO_ENABLED=1 GOOS=linux GOARM=7 GOARCH=arm go build -a -tags netgo -ldflags '-w -extldflags "-static"' -o arpscan .
#      - cd ../cmdrun/
      - cd ../../../cmdrun/
      - CGO_ENABLED=0 GOOS=linux GOARM=7 GOARCH=arm go build -a -installsuffix cgo -o cmdrun .
      - cd ..
#   - stage: build python docker image
#     script:
#     - export DBLUETOOTHREPO=$DOCKER_NAMESPACE/bluetooth_detect-arm32v7
#     - export VERSION=0.1.0
#     - docker run --rm --privileged multiarch/qemu-user-static:register --reset
#     - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#     - docker build -t $DBLUETOOTHREPO:$VERSION -f images/bluetooth_detect/Dockerfile .
#     - docker images
#     - docker tag $DBLUETOOTHREPO:$VERSION $DBLUETOOTHREPO:latest
#     - docker tag $DBLUETOOTHREPO:$VERSION $DBLUETOOTHREPO:travis-$TRAVIS_BUILD_NUMBER
#     - docker push $DBLUETOOTHREPO
    - stage: build health docker image
      before_install:
      - sudo apt-get update
      - sudo apt-get install -y libpcap-dev
      script:
      - export DHEALTHREPO=$DOCKER_NAMESPACE/kubesim_health-arm32v7
      - export VERSION=0.1.0
      - cd health/
      - GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=0 go build -o build/_output/arm32v7/healthsrv -gcflags all=-trimpath=${GOPATH} -asmflags all=-trimpath=${GOPATH} -tags=v1 ./cmd/...
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker build -t $DHEALTHREPO:$VERSION -f build/Dockerfile .
      - cd ..
      - docker images
      - docker tag $DHEALTHREPO:$VERSION $DHEALTHREPO:latest
      - docker tag $DHEALTHREPO:$VERSION $DHEALTHREPO:travis-$TRAVIS_BUILD_NUMBER
      - docker push $DHEALTHREPO
    - stage: test health docker image
      before_install:
      - sudo apt-get update
      - sudo apt-get install -y libpcap-dev
      script:
      - export DHEALTHREPO=$DOCKER_NAMESPACE/kubesim_health-arm32v7
      - export VERSION=0.1.0
      - docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - docker run -d --name test_base $DHEALTHREPO:$VERSION
      - docker ps | grep -q test_base
